// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OP.Brander.Persistence.Context;

#nullable disable

namespace OP.Brander.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OP.Brander.Domain.Entities.Formatos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caracteristicas")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("FeBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("FormatoPelicula")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id")
                        .HasName("PK__Formatos__3214EC078BF374BA");

                    b.ToTable("Formatos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Caracteristicas = "Formato panorámico abandonado el 1963.",
                            Formato = "Cinerama",
                            FormatoPelicula = "35mm"
                        },
                        new
                        {
                            Id = 2,
                            Caracteristicas = "Formato panorámico introducido el 1953.",
                            Formato = "Cinemascope",
                            FormatoPelicula = "35mm"
                        },
                        new
                        {
                            Id = 3,
                            Caracteristicas = "Formato panorámico creado por Paramount Pictures.",
                            Formato = "Vistavision",
                            FormatoPelicula = ""
                        },
                        new
                        {
                            Id = 4,
                            Caracteristicas = "Formato panorámico de resolución y definición muy elevada.",
                            Formato = "IMAX",
                            FormatoPelicula = "70mm"
                        });
                });

            modelBuilder.Entity("OP.Brander.Domain.Entities.Generos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FeBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id")
                        .HasName("PK__Generos__3214EC078BF374BA");

                    b.ToTable("Generos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genero = "Acción"
                        },
                        new
                        {
                            Id = 2,
                            Genero = "Aventuras"
                        },
                        new
                        {
                            Id = 3,
                            Genero = "Ciencia Ficción"
                        },
                        new
                        {
                            Id = 4,
                            Genero = "Ciencia Ficción"
                        },
                        new
                        {
                            Id = 5,
                            Genero = "No-Ficción/Documental"
                        },
                        new
                        {
                            Id = 6,
                            Genero = "Drama"
                        },
                        new
                        {
                            Id = 7,
                            Genero = "Fantasía"
                        },
                        new
                        {
                            Id = 8,
                            Genero = "Musical"
                        });
                });

            modelBuilder.Entity("OP.Brander.Domain.Entities.Peliculas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Argumento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<double>("Duracion")
                        .HasColumnType("float");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FeBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("Formato")
                        .HasColumnType("int");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id")
                        .HasName("PK__Peliculas__3214EC078BF374BA");

                    b.HasIndex("Formato");

                    b.HasIndex("Genero");

                    b.ToTable("Peliculas", (string)null);
                });

            modelBuilder.Entity("OP.Brander.Domain.Entities.Peliculas", b =>
                {
                    b.HasOne("OP.Brander.Domain.Entities.Formatos", "FormatoNavigation")
                        .WithMany("Peliculas")
                        .HasForeignKey("Formato")
                        .IsRequired()
                        .HasConstraintName("FK_Persona_Formato");

                    b.HasOne("OP.Brander.Domain.Entities.Generos", "GeneroNavigation")
                        .WithMany("Peliculas")
                        .HasForeignKey("Genero")
                        .IsRequired()
                        .HasConstraintName("FK_Pelicula_Genero");

                    b.Navigation("FormatoNavigation");

                    b.Navigation("GeneroNavigation");
                });

            modelBuilder.Entity("OP.Brander.Domain.Entities.Formatos", b =>
                {
                    b.Navigation("Peliculas");
                });

            modelBuilder.Entity("OP.Brander.Domain.Entities.Generos", b =>
                {
                    b.Navigation("Peliculas");
                });
#pragma warning restore 612, 618
        }
    }
}
